{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","meta","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","GifGrid","loadings","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,mCACI,sBAAMC,SAVQ,SAACC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBW,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,e,+BCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIQA,EAAKC,OAJb,uBAIZC,EAJY,EAIZA,KAJY,EAINC,KAEPC,EAAOF,EAAKG,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXX,IAAG,UAAES,EAAIG,cAAN,aAAE,EAAYC,iBAAiBb,QAVvB,kBAgBZO,GAhBY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOX,EAAU,EAAVA,IAErC,OACI,sBAAKe,UAAU,yCAAf,UACI,qBAAKC,IAAKhB,EAAKW,MAAOA,IACtB,4BAAIA,QCDHM,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,UAAU,IAJ0B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAU,WAENxB,EAASC,GACAwB,MAAM,SAAAb,GAECW,EAAS,CACLf,KAAMI,EACNS,UAAU,SAI/B,CAACpB,IAGGqB,EDV2BI,CAAezB,GAApCc,EARsB,EAQ3BP,KAAaa,EARc,EAQdA,SAIrB,OACI,qCACI,oBAAIH,UAAU,oCAAd,SAAoDjB,IACnDoB,GAAY,mBAAGH,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAEoBA,GADCA,EAAIC,aES9Bc,EAhCM,WAAM,MAGaxC,mBAAU,CAAC,gBAHxB,mBAGhByC,EAHgB,KAGJ1C,EAHI,KAUvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ0C,EAAWjB,KAAK,SAAAV,GAEZ,OAAO,cAAC,EAAD,CAEKA,SAAUA,GADLA,Y,MCpBzC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.85ad0bd4.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handdleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handdleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handdleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange = {handdleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=QwzoDwchBelsz2xSSxtXjX7YZ0z2x4Q3`;\r\n    const resp = await fetch(url);\r\n    const {data, meta} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} title={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","//import React, { useState, useEffect } from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    /*const [images, setImages] = useState([]);\r\n\r\n    useEffect( () => {\r\n        getGifs( category ).then(setImages);\r\n    }, []); // segundo argumento \"[]\" es un arreglo de dependencias, significa que no tiene ninguna dependecia y se va a ejecutar cuando se renderize el componente por primera vez*/\r\n    \r\n    const { data:images, loadings } = useFetchGifs(  category );\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3> \r\n            {loadings && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className='card-grid'>\r\n            \r\n                {\r\n                    images.map( img => (\r\n                    <GifGridItem \r\n                                    key={img.id}\r\n                                    {...img} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loadings: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category )\r\n                .then( img => {\r\n                    \r\n                        setState({\r\n                            data: img,\r\n                            loadings: false\r\n                        });\r\n\r\n                });\r\n    }, [category]);\r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch','Samurai X','Dragon Ball'];\r\n    const [categories, setCategories] = useState( ['Dragon Ball']);\r\n\r\n    /*const handdleAdd = () =>{\r\n        //setCategories([...categories, 'HunterXHunter']);\r\n        setCategories(cats => [...cats, 'HUnterXHunter']); // el argumento \"cats\" representa el valor del estado anterior \r\n    }*/\r\n\r\n    return (\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => {\r\n                        //return <li key={category}> {category} </li>\r\n                        return <GifGrid\r\n                                    key={category} \r\n                                    category={category} \r\n                                />\r\n                    })\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}